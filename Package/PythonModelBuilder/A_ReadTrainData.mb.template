/***************
edited by Eric Liu
This file is used as the template for reading training dataset and save it as nn_train.mbd in data sub-directory
input :
    train : training dataset path
    delimiter : dataset delimiter
    bad : bad variable name
    role_ids : key variables roles assignment lines
    keep_vars : keep variables list
***************/
import com.fairisaac.mb.scripting.data.BinningMissingValueMap

requires (heap:'2G') // Allocates RAM for running the script
String pathToData = './data/'
String datasetName = 'nn_train' // Name of MB datafile without the .mbd

String srcURI = "{opt[train]}"
String sinkURI = pathToData+datasetName+'_init.mbd'

new File('./data').mkdir()

// Import data 
Dataset ds = app.task.importData(
    in: srcURI,
    out: sinkURI,
    fileType: 'delimited',
    overwrite: true,
    calculateStats: false
) {{
    layout (
        varDelimiter: '{opt[delimiter]}', \\ '\007' or ','
        characterSet: 'US-ASCII',
        partialLayout: true
    ) {{}}
}}.dataset

// Add default roles
ds.getVariableInfos().each() {{
    if (it.getName() == 'opt[bad]')
        it.getVariableRoles().add('target')
{opt[role_ids]}
//    else if (it.getName() == 'opt[key]')
//        it.getVariableRoles().add('recordID')
    else
        it.getVariableRoles().add('predictor')
}}

// Categorize variables
app.data.categorize(ds, '{opt[bad]}')

// Save to datafile
ds.save()

Dataset ds2 = app.data.open(source: sinkURI,
    vars: {opt[keep_vars]}
    ) {{
    partition(sets: [70, 30])
}}

Dataset ds3 = app.task.copy(
    in:ds2,
    out:pathToData+datasetName+'.mbd',
    overwrite:true).dataset

// Print dataset info and sample to console
app.data.dump(in:ds3, contents:true)
