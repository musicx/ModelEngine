/***************
edited by Eric Liu
This file is used as the template for scoring function
input :
    spec : pmml spec file path
    input : input dataset path
    output : output flat file path
    keys : key variables
    name : model name
***************/
requires(heap:'6024M')

model_file = '{opt[spec]}'  //  './models/Nn'+numNodes+numLayers+'.pmml'
modeln = app.model.load(model_file)
modeln.name = '{opt[name]}'
// Load the dataset and apply transforms: e.g. score, rename, and binary target
Dataset ds = app.data.open(source: '{opt[input]}')  // './data/opt[data].mbd'
{{
    score(model: modeln)
    rename(vars: '{opt[name]}_score=score_{opt[name]}') // model score renaming
}}

Dataset dsout = app.data.create()
app.data.copy(in:ds, out:dsout)

String keepvars='{opt[keys]} score_{opt[name]}'
app.task.exportData(in: app.data.open(in:dsout, vars:keepvars) , out:'{opt[output]}', fileType:'delimited', overwrite:true)
//  './data/opt[data]_scored.csv'